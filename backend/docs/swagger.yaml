definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: string
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  response.APIError:
    properties:
      createdAt:
        type: string
      errorCode:
        type: integer
      errorMessage:
        type: string
    type: object
info:
  contact:
    email: henri-vandersleyen@protonmail.com
    name: Henri Vandersleyen
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: BSD-3-Clause license
    url: https://opensource.org/license/bsd-3-clause/
  termsOfService: http://swagger.io/terms/
  title: Printer Exchange Api
  version: "1.0"
paths:
  /api/user:
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: User Data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "500":
          description: Error with input
          schema:
            $ref: '#/definitions/response.APIError'
      summary: create a new user
      tags:
      - users
  /api/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.APIError'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: get user by ID
      parameters:
      - description: User Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.APIError'
      summary: show a user's account
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Updates a user info
      parameters:
      - description: User Id
        in: path
        name: id
        required: true
        type: integer
      - description: User Data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: User created
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.APIError'
        "500":
          description: Error with input
          schema:
            $ref: '#/definitions/response.APIError'
      summary: Updates a user info
      tags:
      - users
swagger: "2.0"
